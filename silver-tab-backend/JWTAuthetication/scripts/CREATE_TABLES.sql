------------------------------------------------------------

-- USER_POSITION

CREATE TABLE USER_POSITION (
   POSITION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   POSITION_NAME VARCHAR2(100 CHAR) NOT NULL
   --CONSTRAINT PK_POSITION PRIMARY KEY (POSITION_ID)
);

------------------------------------------------------------

-- USER_ROLE 

CREATE TABLE USER_ROLE (
   ROLE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   ROLE_NAME VARCHAR2(50 CHAR) NOT NULL
   --PRIMARY KEY (ROLE_ID)
);

------------------------------------------------------------

--BYD_REGION

CREATE TABLE BYD_REGION (
   REGION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   REGION_NAME VARCHAR2(50 CHAR)
--    CONSTRAINT CHECK_BYD_REGION_VALIDATION_NEW PRIMARY KEY (REGION_ID)
);


------------------------------------------------------------

-- COUNTRY

CREATE TABLE COUNTRY (
    COUNTRY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    COUNTRY_NAME VARCHAR2(50 CHAR),
    COUNTRY_ABBREVIATION VARCHAR2(10 CHAR)
);
------------------------------------------------------------

-- BRAZIL_STATE

CREATE TABLE BRAZIL_STATE (
    STATE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STATE_NAME VARCHAR2(50),
    STATE_ABBREVIATION VARCHAR2(2),
    REGION_ID NUMBER,
    --CONSTRAINT PK_BRAZIL_STATE PRIMARY KEY (STATE_ID),
    CONSTRAINT FK_BRAZIL_STATE_REGION FOREIGN KEY (REGION_ID) 
        REFERENCES BYD_REGION(REGION_ID)
);

------------------------------------------------------------

-- BRAZIL_CITY

CREATE TABLE BRAZIL_CITY (
    CITY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CITY_NAME VARCHAR2(100),
    STATE_ID NUMBER,
   -- CONSTRAINT PK_BRAZIL_CITY PRIMARY KEY (CITY_ID),
    CONSTRAINT FK_BRAZIL_CITY_STATE FOREIGN KEY (STATE_ID) 
        REFERENCES BRAZIL_STATE(STATE_ID)
);

------------------------------------------------------------

--DEALER_GROUP

CREATE TABLE DEALER_GROUP (
   GROUP_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   GROUP_NAME VARCHAR2(100)
  -- CONSTRAINT GROUPS_PK PRIMARY KEY (GROUP_ID)
);

------------------------------------------------------------

-- BYD_EMPLOYEE_KEY_POSITION

CREATE TABLE BYD_EMPLOYEE_KEY_POSITION (
    BYD_EMPLOYEE_KEY_POSITION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    BYD_EMPLOYEE_KEY_POSITION_NAME VARCHAR2(50)
);

------------------------------------------------------------

-- BYD_EMPLOYEE

CREATE TABLE BYD_EMPLOYEE (
    BYD_EMPLOYEE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    BYD_EMPLOYEE_NAME VARCHAR2(100),
    BYD_EMPLOYEE_KEY_POSITION_ID NUMBER,
    BYD_EMPLOYEE_PHONE VARCHAR2(20),
    BYD_EMPLOYEE_EMAIL VARCHAR2(100),
    CONSTRAINT FK_BYD_EMPLOYEE_KEY_POSITION FOREIGN KEY (BYD_EMPLOYEE_KEY_POSITION_ID) 
        REFERENCES BYD_EMPLOYEE_KEY_POSITION(BYD_EMPLOYEE_KEY_POSITION_ID)
);

------------------------------------------------------------

-- DEALER_OPERATION_TYPE

CREATE TABLE DEALER_OPERATION_TYPE (
    DEALER_OPERATION_TYPE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_OPERATION_TYPE_NAME VARCHAR2(50)
);    

------------------------------------------------------------

-- DEALER_OPERATION_STATUS

CREATE TABLE DEALER_OPERATION_STATUS (
    DEALER_OPERATION_STATUS_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_OPERATION_STATUS_NAME VARCHAR2(50)
); 

------------------------------------------------------------

-- DEALER_OPERATION_CLASS

CREATE TABLE DEALER_OPERATION_CLASS (
    DEALER_OPERATION_CLASS_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_OPERATION_CLASS_NAME VARCHAR2(50)
); 

------------------------------------------------------------

-- DEALER_OPERATION_SERVICE_SCOPE

CREATE TABLE DEALER_OPERATION_SERVICE_SCOPE (
    DEALER_OPERATION_SERVICE_SCOPE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_OPERATION_SERVICE_SCOPE_NAME VARCHAR2(50)
); 

------------------------------------------------------------

-- DEALER INFO

CREATE TABLE DEALER_INFO (
   -- Main info
   DEALER_CODE VARCHAR2(20) PRIMARY KEY,
   DEALER_NUMBER VARCHAR2(20),
   DEALER_NAME VARCHAR2(100),
   GROUP_ID NUMBER,
   REGION_ID NUMBER,
   REGIONAL_MANAGER_ID NUMBER, 
   STATE_ID NUMBER,
   CITY_ID NUMBER,
   CORPORATE_NAME VARCHAR2(300),
   ADDRESS VARCHAR2(300),  
   COUNTRY_ID NUMBER,
   PASSED_TRAINING NUMBER, -- Indicator of having passed trainning (10041001 YES, 10041002 NO)
   LONGITUDE NUMBER,	
   LATITUDE NUMBER,
   CONTACT_NUMBER VARCHAR2(150),
   EMAIL VARCHAR2(100),
   --AFTER_SALES_MANAGER_ID NUMBER, 
   -- Operation info
   OPERATION_TYPE_ID NUMBER,
   OPERATION_STATUS_ID NUMBER,
   OPERATION_CLASS_ID NUMBER,
   OPERATION_SERVICE_SCOPE_ID NUMBER,
   OPERATION_AFTER_SALE VARCHAR2(15),
   OPERATION_AFTER_SALE_NOTE VARCHAR2(500),
   OPERATION_DATE VARCHAR2(50),
   -- system usage
   DEALER_USE_DMS VARCHAR2(10),
   DEALER_USE_LMS VARCHAR2(10),
   DEALER_USE_TIS VARCHAR2(10),
   DEALER_USE_CSI_PORTAL VARCHAR2(10),
   DEALER_USE_BYD_PORTAL VARCHAR2(10),
   -- key position qty
   AFTER_SALES_MANAGER_QUANTITY VARCHAR2(20),
   SERVICE_ADVISOR_QUANTITY VARCHAR2(20),
   WARRANTY_CLAIM_SPECIALIST_QUANTITY VARCHAR2(20),
   TECHNICIANS_QUANTITY VARCHAR2(20),
   WORKSHOP_LEADER_QUANTITY VARCHAR2(20),
   SPARE_PARTS_SPECIALIST_QUANTITY VARCHAR2(20),
   -- dealer extra info
   TOTAL_AREA VARCHAR2(20),
   WORKSHOP_AREA VARCHAR2(20),	
   TOTAL_BOX VARCHAR2(20),	
   BOX_WITH_LIFT VARCHAR2(20),	
   BOX_WITHOUT_LIFT VARCHAR2(20),	
   AC_CHARGER_QUANTITY VARCHAR2(20),	
   DC_CHARGER_QUANTITY VARCHAR2(20),	
   STATUS_VDS VARCHAR2(50),	
   BATTERY_POOL VARCHAR2(20),	
   -- special areas
   BODY_REPAIR_WORKSHOP_AREA VARCHAR2(20),	
   BODY_REPAIR_STATION_AREA VARCHAR2(20),	 
   WAREHOUSE_AREA VARCHAR2(20),	
   POWER_BATTERY_TURNOVER_ROOM_AREA VARCHAR2(20),	
   RECEPTION_AREA VARCHAR2(20),	
   CUSTOMER_LOUNGE_AREA VARCHAR2(20),	 
   CUSTOMER_TOILET_AREA VARCHAR2(20),	
   CHARGING_AREA VARCHAR2(20),	
   POWERTRAIN_REPAIR_ROOM_AREA VARCHAR2(20),	
   MOBILE_FIRE_WATER_POOL_AREA VARCHAR2(20),
   SERVICE_DIRECTOR_OFFICE_AREA VARCHAR2(20),	
   BUSINESS_DEVELOPMENT_CENTER_AREA VARCHAR2(20),	 
   MEETING_TRAINING_ROOM_AREA VARCHAR2(20),	
   WORKSHOP_OFFICE_AREA	VARCHAR2(20),
   STAFF_LOUNGE_AREA VARCHAR2(20),	
   TOOL_ROOM_AREA VARCHAR2(20),	
   WASTE_OIL_AREA VARCHAR2(20),	
   ELECTRICITY_DISTRIBUTION_ROOM_AREA VARCHAR2(20),	
   AIR_COMPRESSOR_ROOM_AREA VARCHAR2(20),
   WORKSHOP_TOILET_AREA VARCHAR2(20),	
   PAINT_STORAGE_BLENDING_ROOM_AREA	VARCHAR2(20),
   CAR_WASHING_AREA VARCHAR2(20),	
   CLAIM_PARTS_STORAGE_ROOM_AREA VARCHAR2(20),	
   FINANCE_OFFICE_AREA VARCHAR2(20),	
   INSURANCE_CLAIM_AREA	VARCHAR2(20),
   DISASSEMBLED_PARTS_ROOM_AREA VARCHAR2(20),	
   USED_PARTS_STORAGE_AREA VARCHAR2(20),
   CONSTRAINT FK_REGION_ID FOREIGN KEY (REGION_ID)
       REFERENCES BYD_REGION (REGION_ID),
   CONSTRAINT FK_DEALER_GROUP_ID FOREIGN KEY (GROUP_ID)
       REFERENCES DEALER_GROUP (GROUP_ID),
   CONSTRAINT FK_DEALER_STATE FOREIGN KEY (STATE_ID)
       REFERENCES BRAZIL_STATE (STATE_ID),
    CONSTRAINT FK_COUNTRY FOREIGN KEY (COUNTRY_ID)
       REFERENCES COUNTRY (COUNTRY_ID),  
    CONSTRAINT FK_DEALER_OPERATION_TYPE FOREIGN KEY (OPERATION_TYPE_ID)
       REFERENCES DEALER_OPERATION_TYPE (DEALER_OPERATION_TYPE_ID),
    CONSTRAINT FK_DEALER_OPERATION_STATUS FOREIGN KEY (OPERATION_STATUS_ID)
       REFERENCES DEALER_OPERATION_STATUS (DEALER_OPERATION_STATUS_ID),
    CONSTRAINT FK_DEALER_OPERATION_CLASS FOREIGN KEY (OPERATION_CLASS_ID)
       REFERENCES DEALER_OPERATION_CLASS (DEALER_OPERATION_CLASS_ID),
    CONSTRAINT FK_DEALER_OPERATION_SERVICE_SCOPE FOREIGN KEY (OPERATION_SERVICE_SCOPE_ID)
       REFERENCES DEALER_OPERATION_SERVICE_SCOPE (DEALER_OPERATION_SERVICE_SCOPE_ID),
    CONSTRAINT FK_BYD_REGIONAL_MANAGER FOREIGN KEY (REGIONAL_MANAGER_ID)
       REFERENCES BYD_EMPLOYEE (BYD_EMPLOYEE_ID)
);

------------------------------------------------------------

-- DEALER_EMPLOYEE_KEY_POSITION

CREATE TABLE DEALER_EMPLOYEE_KEY_POSITION (
    EMPLOYEE_KEY_POSITION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMPLOYEE_KEY_POSITION_NAME VARCHAR2(50)
);

------------------------------------------------------------

-- DEALER_EMPLOYEE

CREATE TABLE DEALER_EMPLOYEE (
    EMPLOYEE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMPLOYEE_NAME VARCHAR2(100),
    DEALER_CODE VARCHAR2(20),
    EMPLOYEE_KEY_POSITION_ID NUMBER,
    EMPLOYEE_PHONE VARCHAR2(50),
    EMPLOYEE_EMAIL VARCHAR2(100),
    CONSTRAINT FK_EMPLOYEE_KEY_POSITION_ID FOREIGN KEY (EMPLOYEE_KEY_POSITION_ID)
        REFERENCES DEALER_EMPLOYEE_KEY_POSITION (EMPLOYEE_KEY_POSITION_ID),  
    CONSTRAINT FK_DEALER_CODE FOREIGN KEY (DEALER_CODE)
        REFERENCES DEALER_INFO (DEALER_CODE)
);

------------------------------------------------------------

-- LABOUR INFO

CREATE TABLE LABOUR_INFO (
    LABOUR_CODE VARCHAR2(30) PRIMARY KEY,
    LABOUR_NAME VARCHAR2(600),
    VEHICLE_SERIES VARCHAR2(30),
    MAIN_CATEGORY VARCHAR2(500), -- Main Category Name (internationalized)
    SECONDARY_CLASSIFICATION VARCHAR2(160), -- Sub Category Name (internationalized)
    IS_BATTERY_REPAIR NUMBER -- (10041001 YES, 10041002 NO)
);

------------------------------------------------------------

-- PARTS INFO

CREATE TABLE PARTS_INFO (
    PART_CODE VARCHAR2(20) PRIMARY KEY,
    PART_NAME VARCHAR2(150),
    UNIT NUMBER,
    IS_PERMITTED_TO_ORDER NUMBER, -- permission to order part (10041001 YES, 10041002 NO)
    PERMITTED_ORDER_TYPE NUMBER,
    SELLING_PRICE NUMBER,
    SUGGESTED_RETAIL_PRICE NUMBER,
    WARRANTY_PRICE NUMBER,
    VEHICLE_SERIES VARCHAR2(30),
    VOLUME NUMBER,
    REGION VARCHAR2(150),
    SPARE_PARTS_TYPE NUMBER, -- Material classification (Normal Spare Parts 60161001, Special Spare Parts 60161002, Reserve spare parts 60161003)
    IS_OEM_PARTS NUMBER, -- Original Equipment Manufacturer (10041001 YES, 10041002 NO)
    CREATION_DATE TIMESTAMP
);

------------------------------------------------------------

-- REPAIR ORDER MAIN

CREATE TABLE REPAIR_ORDER_MAIN (
    DEALER_ORDER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_ORDER_VERSION NUMBER,
    DEALER_CODE VARCHAR2(20),
    EXTERNAL_DEALER_ORDER_NO VARCHAR2(30),
    SERVICE_CONSULTANT VARCHAR2(300),
    REPAIR_TYPE VARCHAR2(20),
    REPAIR_SOURCE NUMBER,
    ORDER_TYPE NUMBER,
    ORDER_STATUS NUMBER,
    MAINTENANCE_TIMES NUMBER,
    REPAIR_STORE_FLAG NUMBER,
    REPAIR_STORE_CODE VARCHAR2(30),
    OEM_FLAG NUMBER,
    CREATION_DATE_BY_DEALERSYS TIMESTAMP,
    ORDER_LAST_BALANCE_DATE TIMESTAMP,
    VIN VARCHAR2(20),
    SERIES_NAME VARCHAR2(100),
    MODEL_NAME VARCHAR2(100),
    POWER_MILEAGE NUMBER,
    TOTAL_MILEAGE NUMBER,
    PREVIOUS_LAST_REPAIR_DATE TIMESTAMP,
    DELIVERER VARCHAR2(300),
    DELIVERER_MOBILE VARCHAR2(20),
    ENTER_SHOP_DATE TIMESTAMP,
    DISPATCH_DATE TIMESTAMP,
    COMPLETION_DATE TIMESTAMP,
    ETD TIMESTAMP,
    CREATE_CLAIM_FLAG NUMBER,
    CLAIM_NO VARCHAR2(30),
    ACTIVITY_FLAG NUMBER,
    ACTIVITY_CODE VARCHAR2(30),
    TROUBLE_DESC VARCHAR2(600),
    DELIVER_PROBLEM VARCHAR2(900),
    CHECK_RESULT VARCHAR2(900),
    CURRENCY VARCHAR2(8),
    TOTAL_PAID_IN_AMOUNT NUMBER,
    MAIN_CREATE_BY VARCHAR2(30),
    MAIN_CREATION_DATE_BY_BRSYS TIMESTAMP,
    CONSTRAINT fk_dealer_info
        FOREIGN KEY (DEALER_CODE)
        REFERENCES DEALER_INFO (DEALER_CODE)
);

------------------------------------------------------------

-- REPAIR ORDER LABOUR

CREATE TABLE REPAIR_ORDER_LABOUR (
    REPAIR_LABOUR_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_ORDER_ID NUMBER,
    LABOUR_CODE VARCHAR2(30),
    LABOUR_NAME VARCHAR2(600),
    LABOUR_HOURS NUMBER,
    TECHNICIAN VARCHAR2(300), 
    UNIT_PRICE_OF_LABOUR NUMBER, 
    LABOUR_DISCOUNT_RATE NUMBER,
    LABOUR_OEM_FLAG NUMBER,
    LABOUR_PAID_IN_AMOUNT NUMBER,
    LABOUR_CREATE_BY VARCHAR2(30),
    LABOUR_CREATE_DATE TIMESTAMP,
    CONSTRAINT fk_repair_order_labour
        FOREIGN KEY (DEALER_ORDER_ID)
        REFERENCES REPAIR_ORDER_MAIN (DEALER_ORDER_ID)
);

------------------------------------------------------------

-- REPAIR ORDER PARTS

CREATE TABLE REPAIR_ORDER_PARTS (
    REPAIR_PART_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_ORDER_ID NUMBER,
    RO_PART_CODE VARCHAR2(20),
    RO_PART_NAME VARCHAR2(150),
    PART_OEM_FLAG NUMBER,
    PART_QUANTITY NUMBER,
    PART_UNIT NUMBER,
    MAIN_PART_FLAG NUMBER, -- (10041001 YES, 10041002 NO)
    SN_OF_UNINSTALLED_PART VARCHAR2(50), -- series number of the part that has been uninstalled/replaced
    SN_OF_INSTALLED_PART VARCHAR2(50), -- series number of the part that has been installed
    REPLACEMENT_DATE TIMESTAMP,
    PART_COST NUMBER,
    PART_RETAIL_PRICE NUMBER,
    PART_DISCOUNT_RATE NUMBER, -- 1 means no discount, 0 means free
    PART_PAID_IN_AMOUNT NUMBER, -- How much customer paid for parts used/consumed in Repair
    PART_CREATE_BY VARCHAR2(30),
    PART_CREATE_DATE TIMESTAMP,
    CONSTRAINT fk_repair_order_parts
        FOREIGN KEY (DEALER_ORDER_ID)
        REFERENCES REPAIR_ORDER_MAIN (DEALER_ORDER_ID)
);

------------------------------------------------------------

-- REPAIR ORDER SALE PARTS

CREATE TABLE REPAIR_ORDER_SALE_PARTS (
    SALE_PART_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_ORDER_ID NUMBER,
    SALE_PART_CODE VARCHAR2(20),
    SALE_PART_NAME VARCHAR2(150),
    SP_OEM_FLAG NUMBER,
    SP_QUANTITY NUMBER,
    SP_UNIT NUMBER,
    SP_COST NUMBER,
    SP_RETAIL_PRICE NUMBER, -- Retail Price of the part sold directly to the customer (aside of what have been used/consumed in the repair)
    SP_DISCOUNT_RATE NUMBER, -- 1 means no discount, 0 means free
    SP_PAID_IN_AMOUNT NUMBER, -- How much the customer paid totally for the part sold directly to the customer (aside of what have been used/consumed in the repair)
    SP_CREATE_BY VARCHAR2(30),
    SP_CREATE_DATE TIMESTAMP,
    CONSTRAINT fk_repair_order_sale_parts
        FOREIGN KEY (DEALER_ORDER_ID)
        REFERENCES REPAIR_ORDER_MAIN (DEALER_ORDER_ID)
);

------------------------------------------------------------

-- STOCK INVENTORY

CREATE TABLE STOCK_INVENTORY (
    DEALER_CODE VARCHAR2(20),
    SPARE_PARTS_CODE VARCHAR2(20),
    STORAGE_LOCATION VARCHAR2(300),
    BOOK_STOCK NUMBER,
    ACTUAL_STOCK NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    UPDATE_BY VARCHAR2(30),
    UPDATE_DATE TIMESTAMP,
    CONSTRAINT pk_stock_inventory PRIMARY KEY (DEALER_CODE, SPARE_PARTS_CODE),
    CONSTRAINT fk_stock_inventory_dealer
        FOREIGN KEY (DEALER_CODE)
        REFERENCES DEALER_INFO (DEALER_CODE),
    CONSTRAINT fk_stock_inventory_parts
        FOREIGN KEY (SPARE_PARTS_CODE)
        REFERENCES PARTS_INFO (PART_CODE)
);

------------------------------------------------------------

-- STOCK TRANSACTION

CREATE TABLE STOCK_TRANSACTION (
    STOCK_TRANSACTION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_CODE VARCHAR2(20),
    MATERIAL_CODE VARCHAR2(20),
    OCCUR_DATE TIMESTAMP,
    IS_FREE_STOCK NUMBER,
    TRANSACTION_DIRECTION VARCHAR2(30),
    TRANSACTION_TYPE VARCHAR2(30),
    INCOMING_QUANTITY NUMBER,
    OUTPUT_QUANTITY NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    CONSTRAINT fk_stock_transaction
        FOREIGN KEY (DEALER_CODE, MATERIAL_CODE)
        REFERENCES STOCK_INVENTORY (DEALER_CODE, SPARE_PARTS_CODE)
);

------------------------------------------------------------

-- STOCK ADJUSTMENT

CREATE TABLE STOCK_ADJUSTMENT (
    ADJUSTMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_CODE VARCHAR2(20),
    SPARE_PARTS_CODE VARCHAR2(20),
    PREVIOUS_BOOK_STOCK NUMBER,
    NEW_BOOK_STOCK NUMBER,
    PREVIOUS_ACTUAL_STOCK NUMBER,
    NEW_ACTUAL_STOCK NUMBER,
    ADJUSTED_BY VARCHAR2(30),
    ADJUSTMENT_DATE TIMESTAMP,
    ADJUSTMENT_REASON VARCHAR2(300),
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    CONSTRAINT fk_adjustment_inventory
        FOREIGN KEY (DEALER_CODE, SPARE_PARTS_CODE)
        REFERENCES STOCK_INVENTORY (DEALER_CODE, SPARE_PARTS_CODE)
);

------------------------------------------------------------

-- USER ACCESS

CREATE TABLE USER_ACCESS (
   USER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   USER_NAME VARCHAR2(40),
   PASSWORD VARCHAR2(60),
   EMAIL VARCHAR2(50),
   ROLE_ID NUMBER,
   POSITION_ID NUMBER,
   CREATE_BY VARCHAR2(30),
   CREATE_DATE TIMESTAMP,
   LAST_MODIFIED_DATE TIMESTAMP,
   CREATE_BY_USER_ID NUMBER,
   LAST_MODIFIED_USER_ID NUMBER,
   --CONSTRAINT PK_USER_ACCESS PRIMARY KEY (USER_ID),
   CONSTRAINT FK_POSITION_ID FOREIGN KEY (POSITION_ID)
       REFERENCES USER_POSITION (POSITION_ID),
   CONSTRAINT FK_ROLE_ID FOREIGN KEY (ROLE_ID)
       REFERENCES USER_ROLE (ROLE_ID)
);

------------------------------------------------------------

-- TRANSMISSION DMS

CREATE TABLE TRANSMISSION_DMS (
    TRANSMISSION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_ORDER_ID NUMBER,
    STATUS_CODE NUMBER,
    DMS_CODE NUMBER,
    MESSAGE VARCHAR2(1500),
    DATA VARCHAR2(300),
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    CONSTRAINT fk_transmission_dms
        FOREIGN KEY (DEALER_ORDER_ID)
        REFERENCES REPAIR_ORDER_MAIN (DEALER_ORDER_ID)
);

------------------------------------------------------------

-- DEALER CREDENTIAL

CREATE TABLE DEALER_CREDENTIAL (
    DEALER_CREDENTIAL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_CODE VARCHAR2(20),
    APP_ID VARCHAR2(20),
    SECRET_KEY VARCHAR2(100),
    CREDENTIAL_CREATE_BY VARCHAR2(100),
    CREDENTIAL_CREATE_DATE TIMESTAMP,
    CREDENTIAL_UPDATE_BY VARCHAR2(100),
    CREDENTIAL_UPDATE_DATE TIMESTAMP,
    CONSTRAINT fk_dealer_credential
        FOREIGN KEY (DEALER_CODE)
        REFERENCES DEALER_INFO (DEALER_CODE)
);

------------------------------------------------------------

--USER_ACCESS_DEALER

CREATE TABLE USER_ACCESS_DEALER (
    DEALER_CODE VARCHAR2(20),
    USER_ID NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP,
    CREATE_BY_USER_ID NUMBER,
    LAST_MODIFIED_USER_ID NUMBER,
    CONSTRAINT PK_USER_ACCESS_DEALER PRIMARY KEY (USER_ID, DEALER_CODE),
    CONSTRAINT FK_USER_ACCESS_DEALER_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES USER_ACCESS (USER_ID),
    CONSTRAINT FK_USER_ACCESS_DEALER_DEALER_CODE FOREIGN KEY (DEALER_CODE)
        REFERENCES DEALER_INFO (DEALER_CODE)
);

------------------------------------------------------------

--USER_ACCESS_GROUP

CREATE TABLE USER_ACCESS_GROUP (
    USER_ID NUMBER,
    GROUP_ID NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP,
    CREATE_BY_USER_ID NUMBER,
    LAST_MODIFIED_USER_ID NUMBER,
    CONSTRAINT PK_USER_ACCESS_GROUP PRIMARY KEY (USER_ID, GROUP_ID),
    CONSTRAINT FK_USER_ACCESS_GROUP_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES USER_ACCESS (USER_ID),
    CONSTRAINT FK_USER_ACCESS_GROUP_GROUP_ID FOREIGN KEY (GROUP_ID)
        REFERENCES DEALER_GROUP (GROUP_ID)
);

------------------------------------------------------------

--USER_ACCESS_REGION

CREATE TABLE USER_ACCESS_REGION (
    USER_ID NUMBER,
    REGION_ID NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP,
    CREATE_BY_USER_ID NUMBER,
    LAST_MODIFIED_USER_ID NUMBER,
    CONSTRAINT PK_USER_ACCESS_REGION PRIMARY KEY (USER_ID, REGION_ID),
    CONSTRAINT FK_USER_ACCESS_REGION_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES USER_ACCESS (USER_ID),
    CONSTRAINT FK_USER_ACCESS_REGION_REGION_ID FOREIGN KEY (REGION_ID)
        REFERENCES BYD_REGION (REGION_ID)
);

------------------------------------------------------------

 -- USER ACCESS STATES
CREATE TABLE USER_ACCESS_STATE (
    USER_ID NUMBER,
    STATE_ID NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP,
    CREATE_BY_USER_ID NUMBER,
    LAST_MODIFIED_USER_ID NUMBER,
    CONSTRAINT PK_USER_ACCESS_STATE PRIMARY KEY (USER_ID, STATE_ID),
    CONSTRAINT FK_USER_ACCESS_STATE_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES USER_ACCESS (USER_ID),
    CONSTRAINT FK_USER_ACCESS_STATE_STATE_ID FOREIGN KEY (STATE_ID)
        REFERENCES BRAZIL_STATE (STATE_ID)
);

------------------------------------------------------------
 
 -- USER ACCESS CITIES
CREATE TABLE USER_ACCESS_CITY (
    USER_ID NUMBER,
    CITY_ID NUMBER,
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP,
    CREATE_BY_USER_ID NUMBER,
    LAST_MODIFIED_USER_ID NUMBER,
    CONSTRAINT PK_USER_ACCESS_CITY PRIMARY KEY (USER_ID, CITY_ID),
    CONSTRAINT FK_USER_ACCESS_CITY_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES USER_ACCESS (USER_ID),
    CONSTRAINT FK_USER_ACCESS_CITY_CITY_ID FOREIGN KEY (CITY_ID)
        REFERENCES BRAZIL_CITY (CITY_ID)
);

------------------------------------------------------------

--USER_SESSION

CREATE TABLE USER_SESSION (
    SESSION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    LOGIN_SESSION_UUID VARCHAR2(36) NOT NULL,  -- For storing UUID session ID
    SESSION_VERSION NUMBER DEFAULT 1 NOT NULL, -- For version tracking
    CREATE_BY VARCHAR2(30),
    CREATE_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP,
    --CONSTRAINT PK_USER_SESSION PRIMARY KEY (SESSION_ID),
    CONSTRAINT FK_USER_SESSION_USER FOREIGN KEY (USER_ID)
        REFERENCES USER_ACCESS (USER_ID)
);
------------------------------------------------------------

-- IMAGE DATA

CREATE TABLE IMAGE_INFO (
    IMAGE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILE_PATH VARCHAR2(600),
    FILE_NAME VARCHAR2(250),
    UPLOAD_DATE TIMESTAMP DEFAULT SYSTIMESTAMP, 
    UPLOADED_BY_USER_ID NUMBER 
);

-- IMAGE TYPE INFO

CREATE TABLE DEALER_IMAGE_TYPE (
    DEALER_IMAGE_TYPE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEALER_IMAGE_TYPE_NAME VARCHAR2(100)
);

-- DEALER IMAGE

CREATE TABLE DEALER_IMAGE (
    IMAGE_ID NUMBER NOT NULL,
    DEALER_CODE VARCHAR2(20) NOT NULL,
    DEALER_IMAGE_TYPE_ID  NUMBER NOT NULL,
    CONSTRAINT pk_dealer_image PRIMARY KEY (IMAGE_ID, DEALER_CODE),
    CONSTRAINT fk_dealer_image_dealer_code FOREIGN KEY (DEALER_CODE)
            REFERENCES DEALER_INFO (DEALER_CODE),
    CONSTRAINT fk_dealer_image_image_id FOREIGN KEY (IMAGE_ID)
        REFERENCES IMAGE_INFO (IMAGE_ID),
    CONSTRAINT fk_dealer_image_type_id FOREIGN KEY (DEALER_IMAGE_TYPE_ID)
        REFERENCES DEALER_IMAGE_TYPE (DEALER_IMAGE_TYPE_ID)
);